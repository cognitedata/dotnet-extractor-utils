on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100

    - name: Dotnet Pack Common
      run: dotnet pack Cognite.Common/Cognite.Common.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}  

    - name: Dotnet Pack Config
      run: dotnet pack Cognite.Config/Cognite.Configuration.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}  

    - name: Dotnet Pack Logging
      run: dotnet pack Cognite.Logging/Cognite.Logging.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}  

    - name: Dotnet Pack Extensions
      run: dotnet pack Cognite.Extensions/Cognite.Extensions.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}

    - name: Dotnet Pack Metrics
      run: dotnet pack Cognite.Metrics/Cognite.Metrics.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}  
    
    - name: Dotnet Pack StateStorage
      run: dotnet pack Cognite.StateStorage/Cognite.StateStorage.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}
    
    - name: Dotnet Pack Utils
      run: dotnet pack ExtractorUtils/ExtractorUtils.csproj --output nuget-packages --configuration Release -p:PackageVersion=${GITHUB_REF##*/v}  

    - name: Dotnet Nuget Push Common
      run: dotnet nuget push nuget-packages/Cognite.Extractor.Common*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push Config
      run: dotnet nuget push nuget-packages/Cognite.Extractor.Configuration*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push Logging
      run: dotnet nuget push nuget-packages/Cognite.Extractor.Logging*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push Extensions
      run: dotnet nuget push nuget-packages/Cognite.Extensions*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push Metrics
      run: dotnet nuget push nuget-packages/Cognite.Extractor.Metrics*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push StateStorage
      run: dotnet nuget push nuget-packages/Cognite.Extractor.StateStorage*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Dotnet Nuget Push Utils
      run: dotnet nuget push nuget-packages/Cognite.ExtractorUtils*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      continue-on-error: false

    - name: Create Release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Build documentation
      run: sh ./build-docs.sh
    - name: Deploy documentation to github pages
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docfx_project/_site
        COMMIT_MESSAGE: Release ${{ github.ref }}
